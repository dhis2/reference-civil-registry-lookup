#
# Copyright (c) 2004-2025, University of Oslo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

- rest:
    clientRequestValidation: true
    openApi:
      specification: "/openapi.yaml"

- route:
    id: findRoute
    from:
      uri: direct:find
      steps:
        - unmarshal:
            description: Deserialises the JSON body into a key-value object
            json: {}
        - removeHeaders:
            description: Removes request protocol headers which can interfere with outbound HTTP requests
            pattern: "CamelHttp*"
        - setHeader:
            name: Content-Type
            constant: application/x-www-form-urlencoded
        - setBody:
            description: Inserts the inbound `id` parameter into the message body
            simple: identifier=${body['id']}
        - to:
            description: |
              Requests an access token from the authorisation server before querying for civil registry for the person 
              identified by the `id` parameter inside the message body. `fhir:search/searchByUrl` from the FHIR component 
              does not transparently support OAuth 2 so this route relies on the HTTP component to transparently request 
              an access token and include it as a HTTP header in the request to the civil registry
            uri: "{{civil-registry-url}}/Person/_search"
            parameters:
              httpMethod: POST
              oauth2ClientId: "{{oauth2.clientId}}"
              oauth2ClientSecret: "{{oauth2.clientSecret}}"
              oauth2TokenEndpoint: "{{oauth2.tokenEndpoint}}"
        - unmarshal:
            description: Deserialises the JSON body response from the civil registry into a key-value object
            json: {}
        - choice:
            when:
              - jsonpath: $[?(@.total > 0)]
                description: Executes the branch if one or more persons are returned from the civil registry
                steps:
                  - setHeader:
                      name: Content-Type
                      constant: application/fhir+json
                  - marshal:
                      description: Serialises the key-value object into JSON
                      json: {}
            otherwise:
              description: Executes the branch if no persons are returned from the civil registry
              steps:
                - setBody:
                    description: Creates a key-value object to hold the response body
                    groovy: "['message': 'Person not found']"
                - marshal:
                    description: Serialises the key-value object into JSON
                    json: {}
                - setHeader:
                    description: Sets the HTTP status code to `Not Found`
                    name: CamelHttpResponseCode
                    constant: "404"
                - setHeader:
                    name: Content-Type
                    constant: application/json