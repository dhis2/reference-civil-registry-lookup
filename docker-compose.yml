services:
  dhis2:
    image: "${DHIS2_IMAGE:-dhis2/core:40.5.0}"
    restart: unless-stopped
    volumes:
      - ./config/dhis2/dhis.conf:/opt/dhis2/dhis.conf:ro
    environment:
      JAVA_OPTS: "-Dcontext.path='${DHIS2_CORE_CONTEXT_PATH:-}' \
              -Dlog4j2.configurationFile=/opt/dhis2/log4j2.xml"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q -S -O /dev/null http://127.0.0.1:8080/dhis-web-commons/security/login.action 2>&1| grep -q 'HTTP.*200'"]
      start_period: 120s
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true

  db:
    image: ghcr.io/baosystems/postgis:13-3.4
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./db-dump:/docker-entrypoint-initdb.d/:ro
    environment:
      POSTGRES_USER: dhis
      POSTGRES_DB: dhis
      POSTGRES_PASSWORD: &postgres_password dhis
      PGPASSWORD: *postgres_password # needed by psql in healthcheck
    healthcheck:
      test: [ "CMD-SHELL", "psql --no-password --quiet --username $$POSTGRES_USER postgres://127.0.0.1/$$POSTGRES_DB -p 5432 --command \"SELECT 'ok'\" > /dev/null" ]
      start_period: 120s
      interval: 1s
      timeout: 3s
      retries: 5

  gateway:
    image: nginx
    restart: always
    depends_on:
      dhis2:
        condition: service_healthy
    ports:
      - "${DHIS2_PORT:-8080}:80"
    volumes:
      - ./config/gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    security_opt:
      - no-new-privileges:true
  
  civil-registry:
    image: "hapiproject/hapi:v7.4.0-tomcat"

  keycloak:
    image: "quay.io/keycloak/keycloak:25.0.6"
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KC_HEALTH_ENABLED: "true"
    
      # comment KC_HOSTNAME and KC_HOSTNAME_BACKCHANNEL_DYNAMIC to test Keycloak from Docker host
      KC_HOSTNAME: "http://keycloak:8080"
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/localhost/9000 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"
        ]
      start_period: 120s
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./config/keycloak/civil-registry-realm.json:/opt/keycloak/data/import/civil-registry-realm.json:ro
    command: ["start-dev", "--import-realm"]

  auth-proxy:
    image: "quay.io/oauth2-proxy/oauth2-proxy:v7.6.0"
    ports:
      - "4180:4180"
    command: --config /oauth2-proxy.cfg
    volumes:
      - "./config/auth-proxy/oauth2-proxy-keycloak.cfg:/oauth2-proxy.cfg"
    depends_on:
       keycloak:
         condition: service_healthy

  # oauth-route-middleware:
  #   build: ./oauth-route-middleware
  #   restart: always
  #   security_opt:
  #     - no-new-privileges:true

volumes:
  db-dump: { }
  files:
    driver: local
  postgresql:
    driver: local
