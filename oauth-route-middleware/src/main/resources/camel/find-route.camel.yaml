#
#  Copyright (c) 2004-2024, University of Oslo
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  Redistributions of source code must retain the above copyright notice, this
#  list of conditions and the following disclaimer.
#
#  Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation
#  and/or other materials provided with the distribution.
#  Neither the name of the HISP project nor the names of its contributors may
#  be used to endorse or promote products derived from this software without
#  specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
#  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
#  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

- route:
    id: findRoute
    from:
      uri: direct:find
      steps:
        - to:
            uri: direct:fetchAccessToken
            variableReceive: accessToken
        - toD:
            uri: fhir:search/searchByUrl
            parameters:
              url: Person?identifier=${body['id']}
              accessToken: ${variable.accessToken}
        - choice:
            when:
              - simple: ${body.total} > 0
                steps:
                - marshal:
                    fhirJson: { }
                - transform:
                    datasonnet:
                      expression: resource:classpath:dhis2Person.ds
                      resultType: java.util.Map
                      bodyMediaType: application/json
                      outputMediaType: application/x-java-object
            otherwise:
              steps:
                - setHeader:
                    name: CamelHttpResponseCode
                    constant: "404"
                - setHeader:
                    name: Content-Type
                    constant: text/plain